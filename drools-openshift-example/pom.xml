<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.drools.workshop</groupId>
    <artifactId>drools-openshift-example</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Drools Workshop :: Openshift Example</name>

    <properties>
        <github.global.server>github</github.global.server>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <kie.version>6.4.0.Final</kie.version>
        <junit.version>4.11</junit.version>
        <cdi.version>1.2</cdi.version>
        <version.wildfly-swarm>1.0.0.Beta6</version.wildfly-swarm>
        <docker.from>jboss/base-jdk:8</docker.from> 
        <docker.maven.plugin.version>0.13.5</docker.maven.plugin.version>
        <docker.assemblyDescriptorRef>artifact</docker.assemblyDescriptorRef>
    </properties>

    <modules>
        <module>drools-food-model</module>
        <module>drools-food-kjar</module>
        <module>drools-food-services</module>
        <module>drools-restaurant-model</module>
        <module>drools-restaurant-services</module>
        <module>drools-delivery-model</module>
        <module>drools-delivery-kjar</module>
        <module>drools-delivery-services</module>
        <module>drools-food-controller</module>
    </modules>
  
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wildfly.swarm</groupId>
                <artifactId>bom</artifactId>
                <version>${version.wildfly-swarm}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <repositories>
        <repository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
        </repository>
    </repositories>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.11</version>
                <configuration>
                    <merge>true</merge>
                    <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
                    <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
                    <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
                    <includes>
                        <include>**/*</include>
                    </includes>
                    <repositoryName>drools-workshop</repositoryName>      <!-- github repo name -->
                    <repositoryOwner>salaboy</repositoryOwner>    <!-- github username  -->
                    <!-- NOTE THAT THIS WORKS BECAUSE I HAVE A CUSTOM CONFIGURATION IN MY SETTINGS.XML file to provide the user and password.
                        IT WILL NOT WORK FOR YOU UNLESS YOU ADD YOUR OWN REPOSITORY AND THE CORRECT CREDENTIALS. 
                    -->
                </configuration>
                <executions>
                    <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
